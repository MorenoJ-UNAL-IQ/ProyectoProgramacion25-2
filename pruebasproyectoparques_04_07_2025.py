# -*- coding: utf-8 -*-
"""PruebasProyectoParques.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qohLmexivUzt7FdoOAf7UTKil_CTVqRi
"""

import random

contador_de_turnos = 0


#INICIO DEL JUEGO: Numero de jugadores
while True:
  try:
    jugadores = int(input("¿Cuántos jugadores habrán? (Seleccione de 2-4)"))
    if jugadores >= 2 and jugadores <= 4:
      break
    else:
      print("Debe seleccionar entre 2 y 4 jugadores")
  except ValueError:
    print("Debe ingresar un número")

#determina los colores de los jugadores


lista_de_judadores = [rojo,azul,amarillo,verde]

if jugadores == 3:
if jugadores1 == 3:

 lista_de_judadores.remove(verde)
 del lista_de_judadores["jugadores"][3]

elif jugadores == 2:
elif jugadores1 == 2:

 lista_de_judadores.remove(amarillo)
 del lista_de_judadores["jugadores"][2]

 del lista_de_judadores["jugadores"][3]

#CASILLAS
casillas_juego = 68
seguros = [5, 12, 17, 22, 29, 34, 39, 46, 51, 56, 63]  # Ejemplo
salidas = {'rojo': 5,'verde': 22,'amarillo': 39,'azul': 56}
llegada = {'rojo': list(range(68, 74)),'verde': list(range(74, 80)),'amarillo': list(range(80, 86)),'azul': list(range(86, 92))}

lista_de_judadores = {'rojo':4,'azul':4,'amarillo':4,'verde':4}

if jugadores == 3:
 del lista_de_judadores['verde']
elif jugadores == 2:
 del lista_de_judadores['amarillo']

print(lista_de_judadores)

def turnos(lista_de_judadores):

  while len(lista_de_judadores) > 1:

    for i in lista_de_judadores:
      lanzar_dados()
      if dado1 == 5



turnos(lista_de_judadores)
class ficha:

  def ficha(identidad, color)
    identidad.posicion = -1
    identidad.color = color
    identidad.en_llegada = False

  def en_juego(identidad)
    if identidad.posicion == casillas_juego:
      return identidad.posicion != -1
  def mover(identidad, movimientos)
    if identidad.posicion = -1:
      print('Esta ficha sigue en la carcel')
      return False

#SACAR FICHA



def sacar_ficha(identidad):
  for ficha in identidad.fichas:
    if ficha.posicion == -1 and (dado1 or dado2 == 5 or dado1 + dado2 == 5):
      ficha.posicion = SALIDA[identidad.color]
        print(f"Ficha {identidad.color} sale de la cárcel.")
          return True
    else:
      print("No hay fichas disponibles para sacar.")
      return False
    if identidad.en_llegada:
      paso = llegada[identidad.color].paso(identidad.posicion)
      if index + pasos < len(LLEGADA[self.color]):
                self.posicion = LLEGADA[self.color][index + pasos]
            elif index + pasos == len(LLEGADA[self.color]):
                print(f"¡Ficha {self.color} ha llegado al final!")
                self.posicion = 'fin'
            else:
                print("Movimiento inválido: necesitas número exacto para terminar.")
                return False
        else:
            if self.posicion + pasos >= TOTAL_CASILLAS:
                exceso = self.posicion + pasos - TOTAL_CASILLAS
                if exceso < len(LLEGADA[self.color]):
                    self.posicion = LLEGADA[self.color][exceso]
                    self.en_llegada = True
                else:
                    print("Movimiento inválido: necesitas número exacto para entrar a llegada.")
                    return False
            else:
                self.posicion += pasos
        return True

    def puede_ser_capturada(self):
        return self.posicion not in SEGUROS and not self.en_llegada

#DADOS
def lanzar_dados():
  dado1 = random.randint(1,6)
  dado2 = random.randint(1,6)
  print("Dado 1: ", dado1)
  print("Dado 2: ", dado2)